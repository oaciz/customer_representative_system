{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/demo/src/VideoCall.js\";\nimport React, { useRef, useEffect, useState } from 'react';\nimport { db } from './firebase';\nimport { collection, addDoc, onSnapshot, setDoc, doc } from 'firebase/firestore';\nconst VideoCall = () => {\n  const localVideoRef = useRef(null);\n  const remoteVideoRef = useRef(null);\n  const [pc, setPc] = useState(null);\n  useEffect(() => {\n    const servers = {\n      iceServers: [{\n        urls: 'stun:stun.l.google.com:19302'\n      }]\n    };\n    const peerConnection = new RTCPeerConnection(servers);\n    setPc(peerConnection);\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      localVideoRef.current.srcObject = stream;\n      stream.getTracks().forEach(track => peerConnection.addTrack(track, stream));\n    }).catch(error => {\n      console.error('Error accessing media devices.', error);\n    });\n    peerConnection.ontrack = event => {\n      remoteVideoRef.current.srcObject = event.streams[0];\n    };\n    const callDoc = doc(collection(db, 'calls'));\n    const offerCandidates = collection(callDoc, 'offerCandidates');\n    const answerCandidates = collection(callDoc, 'answerCandidates');\n    peerConnection.onicecandidate = event => {\n      if (event.candidate) {\n        addDoc(offerCandidates, event.candidate.toJSON());\n      }\n    };\n    const createOffer = async () => {\n      const offerDescription = await peerConnection.createOffer();\n      await peerConnection.setLocalDescription(offerDescription);\n      const offer = {\n        sdp: offerDescription.sdp,\n        type: offerDescription.type\n      };\n      await setDoc(callDoc, {\n        offer\n      });\n      onSnapshot(callDoc, snapshot => {\n        const data = snapshot.data();\n        if (!peerConnection.currentRemoteDescription && (data === null || data === void 0 ? void 0 : data.answer)) {\n          const answerDescription = new RTCSessionDescription(data.answer);\n          peerConnection.setRemoteDescription(answerDescription);\n        }\n      });\n      onSnapshot(answerCandidates, snapshot => {\n        snapshot.docChanges().forEach(change => {\n          if (change.type === 'added') {\n            const candidate = new RTCIceCandidate(change.doc.data());\n            peerConnection.addIceCandidate(candidate);\n          }\n        });\n      });\n    };\n    createOffer();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, \"Video G\\xF6r\\xFC\\u015Fmesi\"), /*#__PURE__*/React.createElement(\"video\", {\n    ref: localVideoRef,\n    autoPlay: true,\n    muted: true,\n    width: \"400\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"video\", {\n    ref: remoteVideoRef,\n    autoPlay: true,\n    width: \"400\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }));\n};\nexport default VideoCall;","map":{"version":3,"names":["React","useRef","useEffect","useState","db","collection","addDoc","onSnapshot","setDoc","doc","VideoCall","localVideoRef","remoteVideoRef","pc","setPc","servers","iceServers","urls","peerConnection","RTCPeerConnection","navigator","mediaDevices","getUserMedia","video","audio","then","stream","current","srcObject","getTracks","forEach","track","addTrack","catch","error","console","ontrack","event","streams","callDoc","offerCandidates","answerCandidates","onicecandidate","candidate","toJSON","createOffer","offerDescription","setLocalDescription","offer","sdp","type","snapshot","data","currentRemoteDescription","answer","answerDescription","RTCSessionDescription","setRemoteDescription","docChanges","change","RTCIceCandidate","addIceCandidate","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","muted","width"],"sources":["/Users/macbook/Desktop/demo/src/VideoCall.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport { db } from './firebase';\nimport { collection, addDoc, onSnapshot, setDoc, doc } from 'firebase/firestore';\n\nconst VideoCall = () => {\n  const localVideoRef = useRef(null);\n  const remoteVideoRef = useRef(null);\n  const [pc, setPc] = useState(null);\n\n  useEffect(() => {\n    const servers = {\n      iceServers: [\n        {\n          urls: 'stun:stun.l.google.com:19302',\n        },\n      ],\n    };\n\n    const peerConnection = new RTCPeerConnection(servers);\n    setPc(peerConnection);\n\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true })\n      .then((stream) => {\n        localVideoRef.current.srcObject = stream;\n        stream.getTracks().forEach(track => peerConnection.addTrack(track, stream));\n      })\n      .catch((error) => {\n        console.error('Error accessing media devices.', error);\n      });\n\n    peerConnection.ontrack = (event) => {\n      remoteVideoRef.current.srcObject = event.streams[0];\n    };\n\n    const callDoc = doc(collection(db, 'calls'));\n    const offerCandidates = collection(callDoc, 'offerCandidates');\n    const answerCandidates = collection(callDoc, 'answerCandidates');\n\n    peerConnection.onicecandidate = (event) => {\n      if (event.candidate) {\n        addDoc(offerCandidates, event.candidate.toJSON());\n      }\n    };\n\n    const createOffer = async () => {\n      const offerDescription = await peerConnection.createOffer();\n      await peerConnection.setLocalDescription(offerDescription);\n\n      const offer = {\n        sdp: offerDescription.sdp,\n        type: offerDescription.type,\n      };\n\n      await setDoc(callDoc, { offer });\n\n      onSnapshot(callDoc, (snapshot) => {\n        const data = snapshot.data();\n        if (!peerConnection.currentRemoteDescription && data?.answer) {\n          const answerDescription = new RTCSessionDescription(data.answer);\n          peerConnection.setRemoteDescription(answerDescription);\n        }\n      });\n\n      onSnapshot(answerCandidates, (snapshot) => {\n        snapshot.docChanges().forEach((change) => {\n          if (change.type === 'added') {\n            const candidate = new RTCIceCandidate(change.doc.data());\n            peerConnection.addIceCandidate(candidate);\n          }\n        });\n      });\n    };\n\n    createOffer();\n\n  }, []);\n\n  return (\n    <div>\n      <h2>Video Görüşmesi</h2>\n      <video ref={localVideoRef} autoPlay muted width=\"400\" />\n      <video ref={remoteVideoRef} autoPlay width=\"400\" />\n    </div>\n  );\n};\n\nexport default VideoCall;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}