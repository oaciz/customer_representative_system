{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/demo/src/VideoCall.js\";\nimport React, { useRef, useEffect, useState } from 'react';\nimport { db } from './firebase';\nimport { collection, addDoc, onSnapshot, setDoc, doc, getDoc, query, where } from 'firebase/firestore';\nimport { useHistory } from 'react-router-dom';\nconst VideoCall = () => {\n  const history = useHistory();\n  const localVideoRef = useRef(null);\n  const remoteVideoRef = useRef(null);\n  const [pc, setPc] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const [incomingCall, setIncomingCall] = useState(null);\n  useEffect(() => {\n    const checkAuth = async () => {\n      const loggedInUser = localStorage.getItem('currentUser');\n      if (!loggedInUser) {\n        alert('Lütfen önce giriş yapın!');\n        history.push('/login');\n        return;\n      }\n      const user = JSON.parse(loggedInUser);\n      setCurrentUser(user);\n      console.log('Giriş yapan kullanıcı:', user);\n\n      // Kullanıcıyı çevrimiçi olarak işaretle\n      const userStatusRef = doc(db, 'userStatus', user.email);\n      await setDoc(userStatusRef, {\n        online: true,\n        lastSeen: new Date().toISOString(),\n        email: user.email\n      });\n\n      // Kullanıcı çıkış yaptığında offline yap\n      window.addEventListener('beforeunload', async () => {\n        await setDoc(userStatusRef, {\n          online: false,\n          lastSeen: new Date().toISOString(),\n          email: user.email\n        });\n      });\n    };\n    checkAuth();\n\n    // Çevrimiçi kullanıcıları dinle\n    const q = query(collection(db, 'userStatus'), where('online', '==', true));\n    const unsubscribe = onSnapshot(q, snapshot => {\n      const users = [];\n      snapshot.forEach(doc => {\n        if (doc.data().email !== (currentUser === null || currentUser === void 0 ? void 0 : currentUser.email)) {\n          users.push(doc.data());\n        }\n      });\n      setOnlineUsers(users);\n      console.log('Çevrimiçi kullanıcılar:', users);\n    });\n\n    // Gelen aramaları dinle\n    const callsQuery = query(collection(db, 'calls'), where('targetUser', '==', currentUser === null || currentUser === void 0 ? void 0 : currentUser.email), where('status', '==', 'pending'));\n    const callsUnsubscribe = onSnapshot(callsQuery, snapshot => {\n      snapshot.forEach(doc => {\n        setIncomingCall({\n          id: doc.id,\n          ...doc.data()\n        });\n        console.log('Gelen çağrı:', doc.data());\n      });\n    });\n    return () => {\n      unsubscribe();\n      callsUnsubscribe();\n    };\n  }, [currentUser, history]);\n\n  // WebRTC kurulumu\n  const setupWebRTC = async () => {\n    try {\n      console.log('WebRTC kurulumu başlatılıyor...');\n      const servers = {\n        iceServers: [{\n          urls: 'stun:stun.l.google.com:19302'\n        }]\n      };\n      const peerConnection = new RTCPeerConnection(servers);\n      setPc(peerConnection);\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      });\n      localVideoRef.current.srcObject = stream;\n      stream.getTracks().forEach(track => peerConnection.addTrack(track, stream));\n      peerConnection.ontrack = event => {\n        remoteVideoRef.current.srcObject = event.streams[0];\n      };\n      console.log('WebRTC kurulumu tamamlandı');\n      return peerConnection;\n    } catch (error) {\n      console.error('WebRTC kurulumu sırasında hata:', error);\n    }\n  };\n  const callUser = async targetUser => {\n    const peerConnection = await setupWebRTC();\n    const callDoc = doc(collection(db, 'calls'));\n    const offerCandidates = collection(callDoc, 'offerCandidates');\n    const answerCandidates = collection(callDoc, 'answerCandidates');\n    peerConnection.onicecandidate = event => {\n      if (event.candidate) {\n        addDoc(offerCandidates, event.candidate.toJSON());\n      }\n    };\n    const offerDescription = await peerConnection.createOffer();\n    await peerConnection.setLocalDescription(offerDescription);\n    await setDoc(callDoc, {\n      offer: {\n        sdp: offerDescription.sdp,\n        type: offerDescription.type\n      },\n      createdBy: currentUser.email,\n      targetUser: targetUser.email,\n      status: 'pending',\n      createdAt: new Date().toISOString()\n    });\n    onSnapshot(callDoc, snapshot => {\n      const data = snapshot.data();\n      if ((data === null || data === void 0 ? void 0 : data.answer) && !peerConnection.currentRemoteDescription) {\n        const answerDescription = new RTCSessionDescription(data.answer);\n        peerConnection.setRemoteDescription(answerDescription);\n      }\n    });\n    onSnapshot(answerCandidates, snapshot => {\n      snapshot.docChanges().forEach(change => {\n        if (change.type === 'added') {\n          const candidate = new RTCIceCandidate(change.doc.data());\n          peerConnection.addIceCandidate(candidate);\n        }\n      });\n    });\n  };\n  const answerCall = async () => {\n    if (!incomingCall) return;\n    const peerConnection = await setupWebRTC();\n    const callDoc = doc(db, 'calls', incomingCall.id);\n    const answerCandidates = collection(callDoc, 'answerCandidates');\n    const offerCandidates = collection(callDoc, 'offerCandidates');\n    peerConnection.onicecandidate = event => {\n      if (event.candidate) {\n        addDoc(answerCandidates, event.candidate.toJSON());\n      }\n    };\n    const callData = (await getDoc(callDoc)).data();\n    const offerDescription = callData.offer;\n    await peerConnection.setRemoteDescription(new RTCSessionDescription(offerDescription));\n    const answerDescription = await peerConnection.createAnswer();\n    await peerConnection.setLocalDescription(answerDescription);\n    await setDoc(callDoc, {\n      answer: {\n        sdp: answerDescription.sdp,\n        type: answerDescription.type\n      },\n      status: 'answered'\n    }, {\n      merge: true\n    });\n    onSnapshot(offerCandidates, snapshot => {\n      snapshot.docChanges().forEach(change => {\n        if (change.type === 'added') {\n          const candidate = new RTCIceCandidate(change.doc.data());\n          peerConnection.addIceCandidate(candidate);\n        }\n      });\n    });\n    setIncomingCall(null);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }\n  }, \"Video G\\xF6r\\xFC\\u015Fmesi\"), currentUser && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 23\n    }\n  }, \"Kullan\\u0131c\\u0131: \", currentUser.email), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  }, \"\\xC7evrimi\\xE7i Kullan\\u0131c\\u0131lar\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }\n  }, onlineUsers.map(user => /*#__PURE__*/React.createElement(\"li\", {\n    key: user.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }, user.email, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => callUser(user),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }\n  }, \"Ara\"))))), incomingCall && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }\n  }, incomingCall.createdBy, \" ar\\u0131yor...\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: answerCall,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 11\n    }\n  }, \"Cevapla\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setIncomingCall(null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 11\n    }\n  }, \"Reddet\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"video\", {\n    ref: localVideoRef,\n    autoPlay: true,\n    muted: true,\n    width: \"400\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"video\", {\n    ref: remoteVideoRef,\n    autoPlay: true,\n    width: \"400\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }\n  })));\n};\nexport default VideoCall;","map":{"version":3,"names":["React","useRef","useEffect","useState","db","collection","addDoc","onSnapshot","setDoc","doc","getDoc","query","where","useHistory","VideoCall","history","localVideoRef","remoteVideoRef","pc","setPc","currentUser","setCurrentUser","onlineUsers","setOnlineUsers","incomingCall","setIncomingCall","checkAuth","loggedInUser","localStorage","getItem","alert","push","user","JSON","parse","console","log","userStatusRef","email","online","lastSeen","Date","toISOString","window","addEventListener","q","unsubscribe","snapshot","users","forEach","data","callsQuery","callsUnsubscribe","id","setupWebRTC","servers","iceServers","urls","peerConnection","RTCPeerConnection","stream","navigator","mediaDevices","getUserMedia","video","audio","current","srcObject","getTracks","track","addTrack","ontrack","event","streams","error","callUser","targetUser","callDoc","offerCandidates","answerCandidates","onicecandidate","candidate","toJSON","offerDescription","createOffer","setLocalDescription","offer","sdp","type","createdBy","status","createdAt","answer","currentRemoteDescription","answerDescription","RTCSessionDescription","setRemoteDescription","docChanges","change","RTCIceCandidate","addIceCandidate","answerCall","callData","createAnswer","merge","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","key","onClick","ref","autoPlay","muted","width"],"sources":["/Users/macbook/Desktop/demo/src/VideoCall.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport { db } from './firebase';\nimport { collection, addDoc, onSnapshot, setDoc, doc, getDoc, query, where } from 'firebase/firestore';\nimport { useHistory } from 'react-router-dom';\n\nconst VideoCall = () => {\n  const history = useHistory();\n  const localVideoRef = useRef(null);\n  const remoteVideoRef = useRef(null);\n  const [pc, setPc] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const [incomingCall, setIncomingCall] = useState(null);\n\n  useEffect(() => {\n    const checkAuth = async () => {\n      const loggedInUser = localStorage.getItem('currentUser');\n      if (!loggedInUser) {\n        alert('Lütfen önce giriş yapın!');\n        history.push('/login');\n        return;\n      }\n      const user = JSON.parse(loggedInUser);\n      setCurrentUser(user);\n      console.log('Giriş yapan kullanıcı:', user);\n\n      // Kullanıcıyı çevrimiçi olarak işaretle\n      const userStatusRef = doc(db, 'userStatus', user.email);\n      await setDoc(userStatusRef, { \n        online: true,\n        lastSeen: new Date().toISOString(),\n        email: user.email\n      });\n\n      // Kullanıcı çıkış yaptığında offline yap\n      window.addEventListener('beforeunload', async () => {\n        await setDoc(userStatusRef, { \n          online: false,\n          lastSeen: new Date().toISOString(),\n          email: user.email\n        });\n      });\n    };\n    \n    checkAuth();\n\n    // Çevrimiçi kullanıcıları dinle\n    const q = query(collection(db, 'userStatus'), where('online', '==', true));\n    const unsubscribe = onSnapshot(q, (snapshot) => {\n      const users = [];\n      snapshot.forEach((doc) => {\n        if (doc.data().email !== currentUser?.email) {\n          users.push(doc.data());\n        }\n      });\n      setOnlineUsers(users);\n      console.log('Çevrimiçi kullanıcılar:', users);\n    });\n\n    // Gelen aramaları dinle\n    const callsQuery = query(\n      collection(db, 'calls'), \n      where('targetUser', '==', currentUser?.email),\n      where('status', '==', 'pending')\n    );\n    \n    const callsUnsubscribe = onSnapshot(callsQuery, (snapshot) => {\n      snapshot.forEach((doc) => {\n        setIncomingCall({\n          id: doc.id,\n          ...doc.data()\n        });\n        console.log('Gelen çağrı:', doc.data());\n      });\n    });\n\n    return () => {\n      unsubscribe();\n      callsUnsubscribe();\n    };\n  }, [currentUser, history]);\n\n  // WebRTC kurulumu\n  const setupWebRTC = async () => {\n    try {\n      console.log('WebRTC kurulumu başlatılıyor...');\n      const servers = {\n        iceServers: [{ urls: 'stun:stun.l.google.com:19302' }],\n      };\n\n      const peerConnection = new RTCPeerConnection(servers);\n      setPc(peerConnection);\n\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n      localVideoRef.current.srcObject = stream;\n      stream.getTracks().forEach(track => peerConnection.addTrack(track, stream));\n      \n      peerConnection.ontrack = (event) => {\n        remoteVideoRef.current.srcObject = event.streams[0];\n      };\n\n      console.log('WebRTC kurulumu tamamlandı');\n      return peerConnection;\n    } catch (error) {\n      console.error('WebRTC kurulumu sırasında hata:', error);\n    }\n  };\n\n  const callUser = async (targetUser) => {\n    const peerConnection = await setupWebRTC();\n    \n    const callDoc = doc(collection(db, 'calls'));\n    const offerCandidates = collection(callDoc, 'offerCandidates');\n    const answerCandidates = collection(callDoc, 'answerCandidates');\n\n    peerConnection.onicecandidate = (event) => {\n      if (event.candidate) {\n        addDoc(offerCandidates, event.candidate.toJSON());\n      }\n    };\n\n    const offerDescription = await peerConnection.createOffer();\n    await peerConnection.setLocalDescription(offerDescription);\n\n    await setDoc(callDoc, {\n      offer: {\n        sdp: offerDescription.sdp,\n        type: offerDescription.type,\n      },\n      createdBy: currentUser.email,\n      targetUser: targetUser.email,\n      status: 'pending',\n      createdAt: new Date().toISOString()\n    });\n\n    onSnapshot(callDoc, (snapshot) => {\n      const data = snapshot.data();\n      if (data?.answer && !peerConnection.currentRemoteDescription) {\n        const answerDescription = new RTCSessionDescription(data.answer);\n        peerConnection.setRemoteDescription(answerDescription);\n      }\n    });\n\n    onSnapshot(answerCandidates, (snapshot) => {\n      snapshot.docChanges().forEach((change) => {\n        if (change.type === 'added') {\n          const candidate = new RTCIceCandidate(change.doc.data());\n          peerConnection.addIceCandidate(candidate);\n        }\n      });\n    });\n  };\n\n  const answerCall = async () => {\n    if (!incomingCall) return;\n\n    const peerConnection = await setupWebRTC();\n    const callDoc = doc(db, 'calls', incomingCall.id);\n    const answerCandidates = collection(callDoc, 'answerCandidates');\n    const offerCandidates = collection(callDoc, 'offerCandidates');\n\n    peerConnection.onicecandidate = (event) => {\n      if (event.candidate) {\n        addDoc(answerCandidates, event.candidate.toJSON());\n      }\n    };\n\n    const callData = (await getDoc(callDoc)).data();\n    const offerDescription = callData.offer;\n    await peerConnection.setRemoteDescription(new RTCSessionDescription(offerDescription));\n\n    const answerDescription = await peerConnection.createAnswer();\n    await peerConnection.setLocalDescription(answerDescription);\n\n    await setDoc(callDoc, {\n      answer: {\n        sdp: answerDescription.sdp,\n        type: answerDescription.type,\n      },\n      status: 'answered'\n    }, { merge: true });\n\n    onSnapshot(offerCandidates, (snapshot) => {\n      snapshot.docChanges().forEach((change) => {\n        if (change.type === 'added') {\n          const candidate = new RTCIceCandidate(change.doc.data());\n          peerConnection.addIceCandidate(candidate);\n        }\n      });\n    });\n\n    setIncomingCall(null);\n  };\n\n  return (\n    <div>\n      <h2>Video Görüşmesi</h2>\n      {currentUser && <p>Kullanıcı: {currentUser.email}</p>}\n      \n      <div>\n        <h3>Çevrimiçi Kullanıcılar</h3>\n        <ul>\n          {onlineUsers.map((user) => (\n            <li key={user.email}>\n              {user.email}\n              <button onClick={() => callUser(user)}>Ara</button>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      {incomingCall && (\n        <div>\n          <p>{incomingCall.createdBy} arıyor...</p>\n          <button onClick={answerCall}>Cevapla</button>\n          <button onClick={() => setIncomingCall(null)}>Reddet</button>\n        </div>\n      )}\n\n      <div>\n        <video ref={localVideoRef} autoPlay muted width=\"400\" />\n        <video ref={remoteVideoRef} autoPlay width=\"400\" />\n      </div>\n    </div>\n  );\n};\n\nexport default VideoCall;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}