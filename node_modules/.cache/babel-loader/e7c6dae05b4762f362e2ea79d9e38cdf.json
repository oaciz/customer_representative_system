{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/demo/src/VideoCall.js\";\nimport React, { useRef, useEffect, useState } from 'react';\nimport { db } from './firebase';\nimport { collection, addDoc, onSnapshot, setDoc, doc, getDoc } from 'firebase/firestore';\nimport { useHistory } from 'react-router-dom';\nconst VideoCall = () => {\n  const history = useHistory();\n  const localVideoRef = useRef(null);\n  const remoteVideoRef = useRef(null);\n  const [pc, setPc] = useState(null);\n  const [callId, setCallId] = useState('');\n  const [currentUser, setCurrentUser] = useState(null);\n  useEffect(() => {\n    // Oturum kontrolü\n    const checkAuth = async () => {\n      const loggedInUser = localStorage.getItem('currentUser');\n      if (!loggedInUser) {\n        alert('Lütfen önce giriş yapın!');\n        history.push('/login');\n        return;\n      }\n      setCurrentUser(JSON.parse(loggedInUser));\n    };\n    checkAuth();\n    const servers = {\n      iceServers: [{\n        urls: 'stun:stun.l.google.com:19302'\n      }]\n    };\n    const peerConnection = new RTCPeerConnection(servers);\n    setPc(peerConnection);\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      localVideoRef.current.srcObject = stream;\n      stream.getTracks().forEach(track => peerConnection.addTrack(track, stream));\n    }).catch(error => {\n      console.error('Error accessing media devices.', error);\n    });\n    peerConnection.ontrack = event => {\n      remoteVideoRef.current.srcObject = event.streams[0];\n    };\n    peerConnection.onicecandidate = event => {\n      if (event.candidate && callId) {\n        addDoc(collection(db, 'calls', callId, 'offerCandidates'), event.candidate.toJSON());\n      }\n    };\n    return () => {\n      peerConnection.close();\n    };\n  }, [callId, history]);\n  const createOffer = async () => {\n    if (!currentUser) {\n      alert('Lütfen önce giriş yapın!');\n      return;\n    }\n    const callDoc = doc(collection(db, 'calls'));\n    setCallId(callDoc.id);\n    const offerDescription = await pc.createOffer();\n    await pc.setLocalDescription(offerDescription);\n    const offer = {\n      sdp: offerDescription.sdp,\n      type: offerDescription.type,\n      createdBy: currentUser.email,\n      createdAt: new Date().toISOString()\n    };\n    await setDoc(callDoc, {\n      offer\n    });\n    onSnapshot(callDoc, snapshot => {\n      const data = snapshot.data();\n      if ((data === null || data === void 0 ? void 0 : data.answer) && !pc.currentRemoteDescription) {\n        const answerDescription = new RTCSessionDescription(data.answer);\n        pc.setRemoteDescription(answerDescription);\n      }\n    });\n    onSnapshot(collection(callDoc, 'answerCandidates'), snapshot => {\n      snapshot.docChanges().forEach(change => {\n        if (change.type === 'added') {\n          const candidate = new RTCIceCandidate(change.doc.data());\n          pc.addIceCandidate(candidate);\n        }\n      });\n    });\n    alert(`Görüşme ID: ${callDoc.id}`);\n  };\n  const answerCall = async callId => {\n    if (!currentUser) {\n      alert('Lütfen önce giriş yapın!');\n      return;\n    }\n    const callDoc = doc(db, 'calls', callId);\n    const callData = (await getDoc(callDoc)).data();\n    if (!callData) {\n      alert('Geçersiz görüşme ID!');\n      return;\n    }\n    const offerDescription = callData.offer;\n    await pc.setRemoteDescription(new RTCSessionDescription(offerDescription));\n    const answerDescription = await pc.createAnswer();\n    await pc.setLocalDescription(answerDescription);\n    const answer = {\n      sdp: answerDescription.sdp,\n      type: answerDescription.type,\n      answeredBy: currentUser.email,\n      answeredAt: new Date().toISOString()\n    };\n    await setDoc(callDoc, {\n      answer\n    }, {\n      merge: true\n    });\n    onSnapshot(collection(callDoc, 'offerCandidates'), snapshot => {\n      snapshot.docChanges().forEach(change => {\n        if (change.type === 'added') {\n          const candidate = new RTCIceCandidate(change.doc.data());\n          pc.addIceCandidate(candidate);\n        }\n      });\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }, \"Video G\\xF6r\\xFC\\u015Fmesi\"), currentUser && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 23\n    }\n  }, \"Kullan\\u0131c\\u0131: \", currentUser.email), /*#__PURE__*/React.createElement(\"video\", {\n    ref: localVideoRef,\n    autoPlay: true,\n    muted: true,\n    playsInline: true,\n    width: \"400\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"video\", {\n    ref: remoteVideoRef,\n    autoPlay: true,\n    playsInline: true,\n    width: \"400\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: createOffer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, \"G\\xF6r\\xFC\\u015Fme Ba\\u015Flat\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"G\\xF6r\\xFC\\u015Fme ID\",\n    value: callId,\n    onChange: e => setCallId(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => answerCall(callId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, \"G\\xF6r\\xFC\\u015Fmeye Kat\\u0131l\")));\n};\nexport default VideoCall;","map":{"version":3,"names":["React","useRef","useEffect","useState","db","collection","addDoc","onSnapshot","setDoc","doc","getDoc","useHistory","VideoCall","history","localVideoRef","remoteVideoRef","pc","setPc","callId","setCallId","currentUser","setCurrentUser","checkAuth","loggedInUser","localStorage","getItem","alert","push","JSON","parse","servers","iceServers","urls","peerConnection","RTCPeerConnection","navigator","mediaDevices","getUserMedia","video","audio","then","stream","current","srcObject","getTracks","forEach","track","addTrack","catch","error","console","ontrack","event","streams","onicecandidate","candidate","toJSON","close","createOffer","callDoc","id","offerDescription","setLocalDescription","offer","sdp","type","createdBy","email","createdAt","Date","toISOString","snapshot","data","answer","currentRemoteDescription","answerDescription","RTCSessionDescription","setRemoteDescription","docChanges","change","RTCIceCandidate","addIceCandidate","answerCall","callData","createAnswer","answeredBy","answeredAt","merge","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","muted","playsInline","width","onClick","placeholder","value","onChange","e","target"],"sources":["/Users/macbook/Desktop/demo/src/VideoCall.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport { db } from './firebase';\nimport { collection, addDoc, onSnapshot, setDoc, doc, getDoc } from 'firebase/firestore';\nimport { useHistory } from 'react-router-dom';\n\nconst VideoCall = () => {\n  const history = useHistory();\n  const localVideoRef = useRef(null);\n  const remoteVideoRef = useRef(null);\n  const [pc, setPc] = useState(null);\n  const [callId, setCallId] = useState('');\n  const [currentUser, setCurrentUser] = useState(null);\n\n  useEffect(() => {\n    // Oturum kontrolü\n    const checkAuth = async () => {\n      const loggedInUser = localStorage.getItem('currentUser');\n      if (!loggedInUser) {\n        alert('Lütfen önce giriş yapın!');\n        history.push('/login');\n        return;\n      }\n      setCurrentUser(JSON.parse(loggedInUser));\n    };\n    \n    checkAuth();\n\n    const servers = {\n      iceServers: [\n        {\n          urls: 'stun:stun.l.google.com:19302',\n        },\n      ],\n    };\n\n    const peerConnection = new RTCPeerConnection(servers);\n    setPc(peerConnection);\n\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true })\n      .then((stream) => {\n        localVideoRef.current.srcObject = stream;\n        stream.getTracks().forEach(track => peerConnection.addTrack(track, stream));\n      })\n      .catch((error) => {\n        console.error('Error accessing media devices.', error);\n      });\n\n    peerConnection.ontrack = (event) => {\n      remoteVideoRef.current.srcObject = event.streams[0];\n    };\n\n    peerConnection.onicecandidate = (event) => {\n      if (event.candidate && callId) {\n        addDoc(collection(db, 'calls', callId, 'offerCandidates'), event.candidate.toJSON());\n      }\n    };\n\n    return () => {\n      peerConnection.close();\n    };\n  }, [callId, history]);\n\n  const createOffer = async () => {\n    if (!currentUser) {\n      alert('Lütfen önce giriş yapın!');\n      return;\n    }\n\n    const callDoc = doc(collection(db, 'calls'));\n    setCallId(callDoc.id);\n\n    const offerDescription = await pc.createOffer();\n    await pc.setLocalDescription(offerDescription);\n\n    const offer = {\n      sdp: offerDescription.sdp,\n      type: offerDescription.type,\n      createdBy: currentUser.email,\n      createdAt: new Date().toISOString()\n    };\n\n    await setDoc(callDoc, { offer });\n\n    onSnapshot(callDoc, (snapshot) => {\n      const data = snapshot.data();\n      if (data?.answer && !pc.currentRemoteDescription) {\n        const answerDescription = new RTCSessionDescription(data.answer);\n        pc.setRemoteDescription(answerDescription);\n      }\n    });\n\n    onSnapshot(collection(callDoc, 'answerCandidates'), (snapshot) => {\n      snapshot.docChanges().forEach((change) => {\n        if (change.type === 'added') {\n          const candidate = new RTCIceCandidate(change.doc.data());\n          pc.addIceCandidate(candidate);\n        }\n      });\n    });\n\n    alert(`Görüşme ID: ${callDoc.id}`);\n  };\n\n  const answerCall = async (callId) => {\n    if (!currentUser) {\n      alert('Lütfen önce giriş yapın!');\n      return;\n    }\n\n    const callDoc = doc(db, 'calls', callId);\n    const callData = (await getDoc(callDoc)).data();\n\n    if (!callData) {\n      alert('Geçersiz görüşme ID!');\n      return;\n    }\n\n    const offerDescription = callData.offer;\n    await pc.setRemoteDescription(new RTCSessionDescription(offerDescription));\n\n    const answerDescription = await pc.createAnswer();\n    await pc.setLocalDescription(answerDescription);\n\n    const answer = {\n      sdp: answerDescription.sdp,\n      type: answerDescription.type,\n      answeredBy: currentUser.email,\n      answeredAt: new Date().toISOString()\n    };\n\n    await setDoc(callDoc, { answer }, { merge: true });\n\n    onSnapshot(collection(callDoc, 'offerCandidates'), (snapshot) => {\n      snapshot.docChanges().forEach((change) => {\n        if (change.type === 'added') {\n          const candidate = new RTCIceCandidate(change.doc.data());\n          pc.addIceCandidate(candidate);\n        }\n      });\n    });\n  };\n\n  return (\n    <div>\n      <h2>Video Görüşmesi</h2>\n      {currentUser && <p>Kullanıcı: {currentUser.email}</p>}\n      <video ref={localVideoRef} autoPlay muted playsInline width=\"400\" />\n      <video ref={remoteVideoRef} autoPlay playsInline width=\"400\" />\n      <div>\n        <button onClick={createOffer}>Görüşme Başlat</button>\n        <input \n          type=\"text\" \n          placeholder=\"Görüşme ID\" \n          value={callId}\n          onChange={(e) => setCallId(e.target.value)} \n        />\n        <button onClick={() => answerCall(callId)}>Görüşmeye Katıl</button>\n      </div>\n    </div>\n  );\n};\n\nexport default VideoCall;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}